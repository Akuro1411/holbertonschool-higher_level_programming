The ``3-say_my_name`` module
======================

Using ``say_my_name``
-------------------

This is an example text file in reStructuredText format.  First import
``say_my_name`` from the ``3-say_my_name`` module:

    >>> say_my_name = __import__("3-say_my_name").say_my_name # doctest: +NORMALIZE_WHITESPACE

Now use it:

    >>> say_my_name("John", "Smith")
    My name is John Smith

    >>> say_my_name("John", 5) # doctest: +ELLIPSIS
    Traceback (most recent call last):
        ...
    TypeError: first_name must be a string or last_name must be a string

    >>> say_my_name("John") # doctest: +NORMALIZE_WHITESPACE
    My name is John

Note: There is an empty string for default value of last_name, in order to handle it l give it NORMALIZE_WHITESPACE

    >>> say_my_name() # doctest: +ELLIPSIS
    Traceback (most recent call last):
        ...
    TypeError: say_my_name() missing 1 required positional argument: 'first_name'

    >>> say_my_name("") # doctest: +NORMALIZE_WHITESPACE
    My name is

    >>> say_my_name("Bob", 12) # doctest: +ELLIPSIS
    Traceback (most recent call last):
        ...
    TypeError: first_name must be a string or last_name must be a string

    >>> say_my_name(12, "Leon") # doctest: +ELLIPSIS
    Traceback (most recent call last):
        ...
    TypeError: first_name must be a string or last_name must be a string
